#bp.text#geeks on homes#2011-06-18 17:26:57#0fe6887691ca765adb9e20e01dd5f1ff#
Let me tell you about the nerdiest show on television.

It's not a sci-fi miniseries or a space documentary, or even Mythbusters as you might imagine. It's *Holmes on Homes*. And yes, this means I watch HGTV.

At first glance it's your typical construction/remodel show. It adds the element of "something went wrong" by selecting regular people who have paid local contractors to fix or remodel something and the contractor has either done clearly shitty work or left without finishing the job. Enter Mike Holmes, apparently the only proper contractor in Canada and generally burly dude. He assesses the damage and then his team tears everything down (usually finding more things to fix in the process) and rebuilds it by the end of the hour.

Emotional fluff, I say. The general overview does not paint a very nerdy picture for this show.

The nerdy part is the teardown and rebuild process. As they remove the offending staircase/bathroom/structure from the house, Holmes gives a fairly succinct description of why the problem occurred. If there's a leak underneath a shower, it's probably because the shower doesn't drain properly. That's somewhat obvious and I'm no construction buff but this reasoning is oddly satisfying.

Taking a peek behind the walls of your house, everything is set up *just so* and clearly there are some rules governing this design of wood, wires and pipes. What those rules said, on the other hand, were completely beyond me until I started watching this show.

As it turns out, these rules are pretty logical. Don't put hot stuff next to flammable stuff, don't put electrical stuff next to other conductive stuff, the shit should always flow downward; I'm not 100% sure about what the code says exactly but as long as you know the properties of the items you're working with, it's not too difficult to envision the right solution.

One of the reasons I probably enjoy watching this show is that the process isn't too dissimilar from coding. You learn the details of a particular implementation (how to build a shed, or oauth) and nail it together with some common tools (hammer, screwdriver, standard python syntax). You can do a shitty job by not understanding the problem or solution well enough, just as in code, but generally doing a good job on simple projects doesn't require anything more than properly understanding what to expect from the pieces you're fitting together.

I'm sure some thread of this connects back to the resurgence of DIY. At some point in time the need to make something was overwhelmed by grand idea of having it made for you, and then the giants of manufacturing removed quality as a standard in *the great cheapening* (note: this is a under-researched and probably not very accurate history of 20th century manufacturing). Now here we are, pissed with poor quality products and sheds that don't survive a single San Francisco winter.

We're equipped with the mental capacity to understand the rules governing scripts running on computers in a data center 3000 miles away, so why can't we design and build our own damn shed? Yes, we're geeks and nerds, not known for our brute strength - but wheels and pulleys solved the heavy lifting problems years ago, there really isn't a reason not to build it yourself.

This was a long way to explain my love for *Holmes on Homes* (or the hour-long *Holmes Inspection* - how clever!) but I think it makes a deeper point about geeks getting into Making, and anyone else for that matter. There's more to say on Making as a cultural phenomenon but I'll leave that for another time.

For now: set the DVR for a Holmes show, don't take it too seriously, and learn something from your TV.